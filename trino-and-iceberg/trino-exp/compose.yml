services:
  trino:
    image: trinodb/trino:475
    # networks:
    #   iceberg-net:
    volumes:
      - ./etc/trino/catalog:/etc/trino/catalog:rw
      - warehouse:/tmp/warehouse
      - ./trino-recutil-475:/usr/lib/trino/plugin/trino-recutil
      - ./scratch:/scratch
    ports:
      - "8080:8080"
    links:
      - "db:database"
    environment:
      CATALOG_MANAGEMENT: dynamic

  storage:
    image: minio/minio
    container_name: storage
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=storage
      - MINIO_REGION_NAME=us-east-1
      - MINIO_REGION=us-east-1
    # networks:
    #   iceberg-net:
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]
  
  mc:
    depends_on:
      - storage
    image: minio/mc
    container_name: mc
    # networks:
    #   iceberg-net:
    #     aliases:
    #       - minio.storage
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - AWS_DEFAULT_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://storage:9000 admin password) do echo '...waiting...' && sleep 1; done;
      # /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc mb minio/iceberg;
      /usr/bin/mc policy set public minio/warehouse;
      /usr/bin/mc policy set public minio/iceberg;
      " 

  db:
    image: postgres:17
    restart: always
    shm_size: 128mb
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: example

  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080
    volumes:
      - warehouse:/tmp/warehouse

# networks:
#   iceberg-net:

volumes:
  pgdata:
  warehouse:
